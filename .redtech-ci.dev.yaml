image: php:8.1

services:
  - docker:dind

variables:
  ############################
  ## Ubah bagian ini
  ############################
  APP_DEBUG: "true"
  MYSQL_USER: root
  MYSQL_PASS: redbuzz23a
  MYSQL_DATABASE: neraca_ruang
  DIR_SERVER: neraca_ruang
  SERVER_PORT: 2130

  ###########################
  ## Yang ini sebaiknya
  ## jangan diubah
  ###########################
  GROUP: redtech
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  SERVER_NAME: 49.128.186.34
  SERVER_USER: devops
  NETWORK_HOST: redtech-db-laravel
  CONTAINER_NAME_PROJECT: $CI_PROJECT_NAME-$CI_COMMIT_BRANCH
  INTERNAL_SERVER_PORT: 8000
  DIR_DIST: /home/$SERVER_USER/$DIR_SERVER/
  LARAVEL_STORAGE: /home/$SERVER_USER/$DIR_SERVER/storage:/app/storage

cache:
  paths:
    - vendor/

stages:
  - setup
  - build
  - deploy

setup:
  stage: setup
  before_script:
    - "which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )"
    - eval $(ssh-agent -s)
    - echo "$SSH_DEV_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

  script:
    - ssh $SERVER_USER@$SERVER_NAME "mkdir $DIR_DIST || true"
    - ssh $SERVER_USER@$SERVER_NAME docker exec -i $MYSQL_CONTAINER_NAME mysql -u$MYSQL_ROOT_USER -p$MYSQL_ROOT_PASSWORD  <<< "CREATE DATABASE $MYSQL_DATABASE" || true
    - ssh $SERVER_USER@$SERVER_NAME docker exec -i $MYSQL_CONTAINER_NAME mysql -u$MYSQL_ROOT_USER -p$MYSQL_ROOT_PASSWORD  <<< "CREATE USER '$MYSQL_USER'@'%' IDENTIFIED BY '$MYSQL_PASS';" || true
    - ssh $SERVER_USER@$SERVER_NAME docker exec -i $MYSQL_CONTAINER_NAME mysql -u$MYSQL_ROOT_USER -p$MYSQL_ROOT_PASSWORD  <<< "GRANT ALL PRIVILEGES ON $MYSQL_DATABASE.* TO '$MYSQL_USER'@'%';" || true
    - ssh $SERVER_USER@$SERVER_NAME mkdir -p $DIR_DIST/storage/{app/public,framework/{cache/data,sessions,testing,views},logs} || true
  when: on_success
  only:
    - main

build:
  stage: build
  image: docker:24.0.0-dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  services:
    - name: docker:24.0.0-dind
      alias: docker
      command: ["--tls=false"]
  before_script:
    - "which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )"
    - eval $(ssh-agent -s)
    - echo "$SSH_DEV_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - cp .env.staging .env || true
    - sed -i "s/APP_DEBUG=/APP_DEBUG=$APP_DEBUG/" .env
    - sed -i "s/APP_URL=/APP_URL=http\:\/\/$SERVER_NAME:$SERVER_PORT/" .env
    - sed -i "s/DB_HOST=/DB_HOST=redtech-dev-mysql/" .env
    - sed -i "s/DB_USERNAME=/DB_USERNAME=$MYSQL_USER/" .env
    - sed -i "s/DB_PASSWORD=/DB_PASSWORD=$MYSQL_PASS/" .env
    - sed -i "s/DB_DATABASE=/DB_DATABASE=$MYSQL_DATABASE/" .env
    - sed -i "s/DB_PORT=/DB_PORT=3306/" .env
    - cat .env

    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build --network host -f Dockerfile -t $IMAGE_TAG .
    # - docker tag $IMAGE_TAG $CI_REGISTRY/$IMAGE_TAG
    - docker push $IMAGE_TAG
  when: on_success
  only:
    - main

deploy:
  stage: deploy
  before_script:
    - "which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )"
    - eval $(ssh-agent -s)
    - echo "$SSH_DEV_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

  script:
    - ssh $SERVER_USER@$SERVER_NAME "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY"
    - ssh $SERVER_USER@$SERVER_NAME "docker pull $IMAGE_TAG"
    - ssh $SERVER_USER@$SERVER_NAME "docker rm -f $CONTAINER_NAME_PROJECT || true"
    - ssh $SERVER_USER@$SERVER_NAME "docker network create $NETWORK_HOST || true"

    ## Run Container
    - ssh $SERVER_USER@$SERVER_NAME "docker run --network $NETWORK_HOST -p $SERVER_PORT:$INTERNAL_SERVER_PORT --name $CONTAINER_NAME_PROJECT -e TZ=Asia/Jakarta -v $LARAVEL_STORAGE -d $IMAGE_TAG"

    - ssh $SERVER_USER@$SERVER_NAME docker exec -i $CONTAINER_NAME_PROJECT mkdir -p storage/{app/public,framework/{cache/data,sessions,testing,views},logs} || true

    ## Run Composer
    - ssh $SERVER_USER@$SERVER_NAME docker exec -i $CONTAINER_NAME_PROJECT php artisan migrate || true
    - ssh $SERVER_USER@$SERVER_NAME docker exec -i $CONTAINER_NAME_PROJECT composer dump-autoload || true
  environment:
    name: development server
    url: http://$SERVER_NAME:$SERVER_PORT
  when: on_success
  only:
    - main
